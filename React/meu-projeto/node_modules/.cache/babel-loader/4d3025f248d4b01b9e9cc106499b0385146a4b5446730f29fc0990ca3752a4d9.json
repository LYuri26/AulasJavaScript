{"ast":null,"code":"var _jsxFileName = \"/home/lenon/Documentos/GitHub/AulasJavaScript/React/meu-projeto/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseEffectComponent = () => {\n  _s();\n  // Define um estado para armazenar a hora atual\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\n\n  // Utiliza o useEffect para atualizar a hora a cada segundo\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n\n    // Retorna uma função de limpeza para parar o intervalo quando o componente for desmontado\n    return () => clearInterval(interval);\n  }, []); // Passa um array vazio para garantir que o efeito seja executado apenas uma vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exemplo de useEffect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"A hora atual \\xE9: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(UseEffectComponent, \"jv+edrtG9vNyfyGh4+I7dCkFwt0=\");\n_c = UseEffectComponent;\nexport default UseEffectComponent;\nvar _c;\n$RefreshReg$(_c, \"UseEffectComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UseEffectComponent","_s","time","setTime","Date","toLocaleTimeString","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lenon/Documentos/GitHub/AulasJavaScript/React/meu-projeto/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst UseEffectComponent = () => {\n  // Define um estado para armazenar a hora atual\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\n\n  // Utiliza o useEffect para atualizar a hora a cada segundo\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n\n    // Retorna uma função de limpeza para parar o intervalo quando o componente for desmontado\n    return () => clearInterval(interval);\n  }, []); // Passa um array vazio para garantir que o efeito seja executado apenas uma vez\n\n  return (\n    <div>\n      <h2>Exemplo de useEffect</h2>\n      <p>A hora atual é: {time}</p>\n    </div>\n  );\n};\n\nexport default UseEffectComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;;EAEjE;EACAR,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCJ,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC1C,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Bd,OAAA;MAAAU,QAAA,GAAG,qBAAgB,EAACP,IAAI;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACZ,EAAA,CApBID,kBAAkB;AAAAc,EAAA,GAAlBd,kBAAkB;AAsBxB,eAAeA,kBAAkB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}